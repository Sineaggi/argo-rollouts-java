/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * RunSummary contains the final results from the metric executions
 */
@ApiModel(description = "RunSummary contains the final results from the metric executions")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-19T21:57:47.017Z[Etc/UTC]")
public class V1alpha1RunSummary {
  public static final String SERIALIZED_NAME_COUNT = "count";
  @SerializedName(SERIALIZED_NAME_COUNT)
  private Integer count;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private Integer error;

  public static final String SERIALIZED_NAME_FAILED = "failed";
  @SerializedName(SERIALIZED_NAME_FAILED)
  private Integer failed;

  public static final String SERIALIZED_NAME_INCONCLUSIVE = "inconclusive";
  @SerializedName(SERIALIZED_NAME_INCONCLUSIVE)
  private Integer inconclusive;

  public static final String SERIALIZED_NAME_SUCCESSFUL = "successful";
  @SerializedName(SERIALIZED_NAME_SUCCESSFUL)
  private Integer successful;


  public V1alpha1RunSummary count(Integer count) {
    
    this.count = count;
    return this;
  }

   /**
   * This is equal to the sum of Successful, Failed, Inconclusive
   * @return count
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This is equal to the sum of Successful, Failed, Inconclusive")

  public Integer getCount() {
    return count;
  }


  public void setCount(Integer count) {
    this.count = count;
  }


  public V1alpha1RunSummary error(Integer error) {
    
    this.error = error;
    return this;
  }

   /**
   * Error is the number of times an error was encountered during measurement
   * @return error
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Error is the number of times an error was encountered during measurement")

  public Integer getError() {
    return error;
  }


  public void setError(Integer error) {
    this.error = error;
  }


  public V1alpha1RunSummary failed(Integer failed) {
    
    this.failed = failed;
    return this;
  }

   /**
   * Failed is the number of times the metric was measured Failed
   * @return failed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Failed is the number of times the metric was measured Failed")

  public Integer getFailed() {
    return failed;
  }


  public void setFailed(Integer failed) {
    this.failed = failed;
  }


  public V1alpha1RunSummary inconclusive(Integer inconclusive) {
    
    this.inconclusive = inconclusive;
    return this;
  }

   /**
   * Inconclusive is the number of times the metric was measured Inconclusive
   * @return inconclusive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Inconclusive is the number of times the metric was measured Inconclusive")

  public Integer getInconclusive() {
    return inconclusive;
  }


  public void setInconclusive(Integer inconclusive) {
    this.inconclusive = inconclusive;
  }


  public V1alpha1RunSummary successful(Integer successful) {
    
    this.successful = successful;
    return this;
  }

   /**
   * Successful is the number of times the metric was measured Successful
   * @return successful
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Successful is the number of times the metric was measured Successful")

  public Integer getSuccessful() {
    return successful;
  }


  public void setSuccessful(Integer successful) {
    this.successful = successful;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1RunSummary v1alpha1RunSummary = (V1alpha1RunSummary) o;
    return Objects.equals(this.count, v1alpha1RunSummary.count) &&
        Objects.equals(this.error, v1alpha1RunSummary.error) &&
        Objects.equals(this.failed, v1alpha1RunSummary.failed) &&
        Objects.equals(this.inconclusive, v1alpha1RunSummary.inconclusive) &&
        Objects.equals(this.successful, v1alpha1RunSummary.successful);
  }

  @Override
  public int hashCode() {
    return Objects.hash(count, error, failed, inconclusive, successful);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1RunSummary {\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    failed: ").append(toIndentedString(failed)).append("\n");
    sb.append("    inconclusive: ").append(toIndentedString(inconclusive)).append("\n");
    sb.append("    successful: ").append(toIndentedString(successful)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

