/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.argoproj.models.V1alpha1AnalysisRunStatusMeasurements;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * V1alpha1AnalysisRunStatusMetricResults
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-19T02:24:32.086Z[Etc/UTC]")
public class V1alpha1AnalysisRunStatusMetricResults {
  public static final String SERIALIZED_NAME_CONSECUTIVE_ERROR = "consecutiveError";
  @SerializedName(SERIALIZED_NAME_CONSECUTIVE_ERROR)
  private Integer consecutiveError;

  public static final String SERIALIZED_NAME_COUNT = "count";
  @SerializedName(SERIALIZED_NAME_COUNT)
  private Integer count;

  public static final String SERIALIZED_NAME_DRY_RUN = "dryRun";
  @SerializedName(SERIALIZED_NAME_DRY_RUN)
  private Boolean dryRun;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private Integer error;

  public static final String SERIALIZED_NAME_FAILED = "failed";
  @SerializedName(SERIALIZED_NAME_FAILED)
  private Integer failed;

  public static final String SERIALIZED_NAME_INCONCLUSIVE = "inconclusive";
  @SerializedName(SERIALIZED_NAME_INCONCLUSIVE)
  private Integer inconclusive;

  public static final String SERIALIZED_NAME_MEASUREMENTS = "measurements";
  @SerializedName(SERIALIZED_NAME_MEASUREMENTS)
  private List<V1alpha1AnalysisRunStatusMeasurements> measurements = null;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Map<String, String> metadata = null;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PHASE = "phase";
  @SerializedName(SERIALIZED_NAME_PHASE)
  private String phase;

  public static final String SERIALIZED_NAME_SUCCESSFUL = "successful";
  @SerializedName(SERIALIZED_NAME_SUCCESSFUL)
  private Integer successful;


  public V1alpha1AnalysisRunStatusMetricResults consecutiveError(Integer consecutiveError) {
    
    this.consecutiveError = consecutiveError;
    return this;
  }

   /**
   * Get consecutiveError
   * @return consecutiveError
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getConsecutiveError() {
    return consecutiveError;
  }


  public void setConsecutiveError(Integer consecutiveError) {
    this.consecutiveError = consecutiveError;
  }


  public V1alpha1AnalysisRunStatusMetricResults count(Integer count) {
    
    this.count = count;
    return this;
  }

   /**
   * Get count
   * @return count
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCount() {
    return count;
  }


  public void setCount(Integer count) {
    this.count = count;
  }


  public V1alpha1AnalysisRunStatusMetricResults dryRun(Boolean dryRun) {
    
    this.dryRun = dryRun;
    return this;
  }

   /**
   * Get dryRun
   * @return dryRun
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDryRun() {
    return dryRun;
  }


  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }


  public V1alpha1AnalysisRunStatusMetricResults error(Integer error) {
    
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getError() {
    return error;
  }


  public void setError(Integer error) {
    this.error = error;
  }


  public V1alpha1AnalysisRunStatusMetricResults failed(Integer failed) {
    
    this.failed = failed;
    return this;
  }

   /**
   * Get failed
   * @return failed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getFailed() {
    return failed;
  }


  public void setFailed(Integer failed) {
    this.failed = failed;
  }


  public V1alpha1AnalysisRunStatusMetricResults inconclusive(Integer inconclusive) {
    
    this.inconclusive = inconclusive;
    return this;
  }

   /**
   * Get inconclusive
   * @return inconclusive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getInconclusive() {
    return inconclusive;
  }


  public void setInconclusive(Integer inconclusive) {
    this.inconclusive = inconclusive;
  }


  public V1alpha1AnalysisRunStatusMetricResults measurements(List<V1alpha1AnalysisRunStatusMeasurements> measurements) {
    
    this.measurements = measurements;
    return this;
  }

  public V1alpha1AnalysisRunStatusMetricResults addMeasurementsItem(V1alpha1AnalysisRunStatusMeasurements measurementsItem) {
    if (this.measurements == null) {
      this.measurements = new ArrayList<>();
    }
    this.measurements.add(measurementsItem);
    return this;
  }

   /**
   * Get measurements
   * @return measurements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<V1alpha1AnalysisRunStatusMeasurements> getMeasurements() {
    return measurements;
  }


  public void setMeasurements(List<V1alpha1AnalysisRunStatusMeasurements> measurements) {
    this.measurements = measurements;
  }


  public V1alpha1AnalysisRunStatusMetricResults message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  public V1alpha1AnalysisRunStatusMetricResults metadata(Map<String, String> metadata) {
    
    this.metadata = metadata;
    return this;
  }

  public V1alpha1AnalysisRunStatusMetricResults putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getMetadata() {
    return metadata;
  }


  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }


  public V1alpha1AnalysisRunStatusMetricResults name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public V1alpha1AnalysisRunStatusMetricResults phase(String phase) {
    
    this.phase = phase;
    return this;
  }

   /**
   * Get phase
   * @return phase
  **/
  @ApiModelProperty(required = true, value = "")

  public String getPhase() {
    return phase;
  }


  public void setPhase(String phase) {
    this.phase = phase;
  }


  public V1alpha1AnalysisRunStatusMetricResults successful(Integer successful) {
    
    this.successful = successful;
    return this;
  }

   /**
   * Get successful
   * @return successful
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSuccessful() {
    return successful;
  }


  public void setSuccessful(Integer successful) {
    this.successful = successful;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1AnalysisRunStatusMetricResults v1alpha1AnalysisRunStatusMetricResults = (V1alpha1AnalysisRunStatusMetricResults) o;
    return Objects.equals(this.consecutiveError, v1alpha1AnalysisRunStatusMetricResults.consecutiveError) &&
        Objects.equals(this.count, v1alpha1AnalysisRunStatusMetricResults.count) &&
        Objects.equals(this.dryRun, v1alpha1AnalysisRunStatusMetricResults.dryRun) &&
        Objects.equals(this.error, v1alpha1AnalysisRunStatusMetricResults.error) &&
        Objects.equals(this.failed, v1alpha1AnalysisRunStatusMetricResults.failed) &&
        Objects.equals(this.inconclusive, v1alpha1AnalysisRunStatusMetricResults.inconclusive) &&
        Objects.equals(this.measurements, v1alpha1AnalysisRunStatusMetricResults.measurements) &&
        Objects.equals(this.message, v1alpha1AnalysisRunStatusMetricResults.message) &&
        Objects.equals(this.metadata, v1alpha1AnalysisRunStatusMetricResults.metadata) &&
        Objects.equals(this.name, v1alpha1AnalysisRunStatusMetricResults.name) &&
        Objects.equals(this.phase, v1alpha1AnalysisRunStatusMetricResults.phase) &&
        Objects.equals(this.successful, v1alpha1AnalysisRunStatusMetricResults.successful);
  }

  @Override
  public int hashCode() {
    return Objects.hash(consecutiveError, count, dryRun, error, failed, inconclusive, measurements, message, metadata, name, phase, successful);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1AnalysisRunStatusMetricResults {\n");
    sb.append("    consecutiveError: ").append(toIndentedString(consecutiveError)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    failed: ").append(toIndentedString(failed)).append("\n");
    sb.append("    inconclusive: ").append(toIndentedString(inconclusive)).append("\n");
    sb.append("    measurements: ").append(toIndentedString(measurements)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    phase: ").append(toIndentedString(phase)).append("\n");
    sb.append("    successful: ").append(toIndentedString(successful)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

