/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.time.OffsetDateTime;
import io.argoproj.models.V1alpha1ALBStatus;
import io.argoproj.models.V1alpha1BlueGreenStatus;
import io.argoproj.models.V1alpha1CanaryStatus;
import io.argoproj.models.V1alpha1PauseCondition;
import io.argoproj.models.V1alpha1RolloutCondition;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * RolloutStatus is the status for a Rollout resource
 */
@ApiModel(description = "RolloutStatus is the status for a Rollout resource")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-19T21:57:47.017Z[Etc/UTC]")
public class V1alpha1RolloutStatus {
  public static final String SERIALIZED_NAME_HP_A_REPLICAS = "HPAReplicas";
  @SerializedName(SERIALIZED_NAME_HP_A_REPLICAS)
  private Integer hpAReplicas;

  public static final String SERIALIZED_NAME_ABORT = "abort";
  @SerializedName(SERIALIZED_NAME_ABORT)
  private Boolean abort;

  public static final String SERIALIZED_NAME_ABORTED_AT = "abortedAt";
  @SerializedName(SERIALIZED_NAME_ABORTED_AT)
  private OffsetDateTime abortedAt = null;

  public static final String SERIALIZED_NAME_ALB = "alb";
  @SerializedName(SERIALIZED_NAME_ALB)
  private V1alpha1ALBStatus alb;

  public static final String SERIALIZED_NAME_AVAILABLE_REPLICAS = "availableReplicas";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_REPLICAS)
  private Integer availableReplicas;

  public static final String SERIALIZED_NAME_BLUE_GREEN = "blueGreen";
  @SerializedName(SERIALIZED_NAME_BLUE_GREEN)
  private V1alpha1BlueGreenStatus blueGreen;

  public static final String SERIALIZED_NAME_CANARY = "canary";
  @SerializedName(SERIALIZED_NAME_CANARY)
  private V1alpha1CanaryStatus canary;

  public static final String SERIALIZED_NAME_COLLISION_COUNT = "collisionCount";
  @SerializedName(SERIALIZED_NAME_COLLISION_COUNT)
  private Integer collisionCount;

  public static final String SERIALIZED_NAME_CONDITIONS = "conditions";
  @SerializedName(SERIALIZED_NAME_CONDITIONS)
  private List<V1alpha1RolloutCondition> conditions = null;

  public static final String SERIALIZED_NAME_CONTROLLER_PAUSE = "controllerPause";
  @SerializedName(SERIALIZED_NAME_CONTROLLER_PAUSE)
  private Boolean controllerPause;

  public static final String SERIALIZED_NAME_CURRENT_POD_HASH = "currentPodHash";
  @SerializedName(SERIALIZED_NAME_CURRENT_POD_HASH)
  private String currentPodHash;

  public static final String SERIALIZED_NAME_CURRENT_STEP_HASH = "currentStepHash";
  @SerializedName(SERIALIZED_NAME_CURRENT_STEP_HASH)
  private String currentStepHash;

  public static final String SERIALIZED_NAME_CURRENT_STEP_INDEX = "currentStepIndex";
  @SerializedName(SERIALIZED_NAME_CURRENT_STEP_INDEX)
  private Integer currentStepIndex;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_OBSERVED_GENERATION = "observedGeneration";
  @SerializedName(SERIALIZED_NAME_OBSERVED_GENERATION)
  private String observedGeneration;

  public static final String SERIALIZED_NAME_PAUSE_CONDITIONS = "pauseConditions";
  @SerializedName(SERIALIZED_NAME_PAUSE_CONDITIONS)
  private List<V1alpha1PauseCondition> pauseConditions = null;

  public static final String SERIALIZED_NAME_PHASE = "phase";
  @SerializedName(SERIALIZED_NAME_PHASE)
  private String phase;

  public static final String SERIALIZED_NAME_PROMOTE_FULL = "promoteFull";
  @SerializedName(SERIALIZED_NAME_PROMOTE_FULL)
  private Boolean promoteFull;

  public static final String SERIALIZED_NAME_READY_REPLICAS = "readyReplicas";
  @SerializedName(SERIALIZED_NAME_READY_REPLICAS)
  private Integer readyReplicas;

  public static final String SERIALIZED_NAME_REPLICAS = "replicas";
  @SerializedName(SERIALIZED_NAME_REPLICAS)
  private Integer replicas;

  public static final String SERIALIZED_NAME_RESTARTED_AT = "restartedAt";
  @SerializedName(SERIALIZED_NAME_RESTARTED_AT)
  private OffsetDateTime restartedAt = null;

  public static final String SERIALIZED_NAME_SELECTOR = "selector";
  @SerializedName(SERIALIZED_NAME_SELECTOR)
  private String selector;

  public static final String SERIALIZED_NAME_STABLE_R_S = "stableRS";
  @SerializedName(SERIALIZED_NAME_STABLE_R_S)
  private String stableRS;

  public static final String SERIALIZED_NAME_UPDATED_REPLICAS = "updatedReplicas";
  @SerializedName(SERIALIZED_NAME_UPDATED_REPLICAS)
  private Integer updatedReplicas;

  public static final String SERIALIZED_NAME_WORKLOAD_OBSERVED_GENERATION = "workloadObservedGeneration";
  @SerializedName(SERIALIZED_NAME_WORKLOAD_OBSERVED_GENERATION)
  private String workloadObservedGeneration;


  public V1alpha1RolloutStatus hpAReplicas(Integer hpAReplicas) {
    
    this.hpAReplicas = hpAReplicas;
    return this;
  }

   /**
   * HPAReplicas the number of non-terminated replicas that are receiving active traffic
   * @return hpAReplicas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "HPAReplicas the number of non-terminated replicas that are receiving active traffic")

  public Integer getHpAReplicas() {
    return hpAReplicas;
  }


  public void setHpAReplicas(Integer hpAReplicas) {
    this.hpAReplicas = hpAReplicas;
  }


  public V1alpha1RolloutStatus abort(Boolean abort) {
    
    this.abort = abort;
    return this;
  }

   /**
   * Abort cancel the current rollout progression
   * @return abort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Abort cancel the current rollout progression")

  public Boolean getAbort() {
    return abort;
  }


  public void setAbort(Boolean abort) {
    this.abort = abort;
  }


  public V1alpha1RolloutStatus abortedAt(OffsetDateTime abortedAt) {
    
    this.abortedAt = abortedAt;
    return this;
  }

   /**
   * Get abortedAt
   * @return abortedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getAbortedAt() {
    return abortedAt;
  }


  public void setAbortedAt(OffsetDateTime abortedAt) {
    this.abortedAt = abortedAt;
  }


  public V1alpha1RolloutStatus alb(V1alpha1ALBStatus alb) {
    
    this.alb = alb;
    return this;
  }

   /**
   * Get alb
   * @return alb
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1ALBStatus getAlb() {
    return alb;
  }


  public void setAlb(V1alpha1ALBStatus alb) {
    this.alb = alb;
  }


  public V1alpha1RolloutStatus availableReplicas(Integer availableReplicas) {
    
    this.availableReplicas = availableReplicas;
    return this;
  }

   /**
   * Total number of available pods (ready for at least minReadySeconds) targeted by this rollout.
   * @return availableReplicas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total number of available pods (ready for at least minReadySeconds) targeted by this rollout.")

  public Integer getAvailableReplicas() {
    return availableReplicas;
  }


  public void setAvailableReplicas(Integer availableReplicas) {
    this.availableReplicas = availableReplicas;
  }


  public V1alpha1RolloutStatus blueGreen(V1alpha1BlueGreenStatus blueGreen) {
    
    this.blueGreen = blueGreen;
    return this;
  }

   /**
   * Get blueGreen
   * @return blueGreen
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1BlueGreenStatus getBlueGreen() {
    return blueGreen;
  }


  public void setBlueGreen(V1alpha1BlueGreenStatus blueGreen) {
    this.blueGreen = blueGreen;
  }


  public V1alpha1RolloutStatus canary(V1alpha1CanaryStatus canary) {
    
    this.canary = canary;
    return this;
  }

   /**
   * Get canary
   * @return canary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1CanaryStatus getCanary() {
    return canary;
  }


  public void setCanary(V1alpha1CanaryStatus canary) {
    this.canary = canary;
  }


  public V1alpha1RolloutStatus collisionCount(Integer collisionCount) {
    
    this.collisionCount = collisionCount;
    return this;
  }

   /**
   * Count of hash collisions for the Rollout. The Rollout controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.
   * @return collisionCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of hash collisions for the Rollout. The Rollout controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.")

  public Integer getCollisionCount() {
    return collisionCount;
  }


  public void setCollisionCount(Integer collisionCount) {
    this.collisionCount = collisionCount;
  }


  public V1alpha1RolloutStatus conditions(List<V1alpha1RolloutCondition> conditions) {
    
    this.conditions = conditions;
    return this;
  }

  public V1alpha1RolloutStatus addConditionsItem(V1alpha1RolloutCondition conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * Conditions a list of conditions a rollout can have.
   * @return conditions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Conditions a list of conditions a rollout can have.")

  public List<V1alpha1RolloutCondition> getConditions() {
    return conditions;
  }


  public void setConditions(List<V1alpha1RolloutCondition> conditions) {
    this.conditions = conditions;
  }


  public V1alpha1RolloutStatus controllerPause(Boolean controllerPause) {
    
    this.controllerPause = controllerPause;
    return this;
  }

   /**
   * ControllerPause indicates the controller has paused the rollout. It is set to true when the controller adds a pause condition. This field helps to discern the scenario where a rollout was resumed after being paused by the controller (e.g. via the plugin). In that situation, the pauseConditions would have been cleared , but controllerPause would still be set to true.
   * @return controllerPause
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ControllerPause indicates the controller has paused the rollout. It is set to true when the controller adds a pause condition. This field helps to discern the scenario where a rollout was resumed after being paused by the controller (e.g. via the plugin). In that situation, the pauseConditions would have been cleared , but controllerPause would still be set to true.")

  public Boolean getControllerPause() {
    return controllerPause;
  }


  public void setControllerPause(Boolean controllerPause) {
    this.controllerPause = controllerPause;
  }


  public V1alpha1RolloutStatus currentPodHash(String currentPodHash) {
    
    this.currentPodHash = currentPodHash;
    return this;
  }

   /**
   * CurrentPodHash the hash of the current pod template
   * @return currentPodHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "CurrentPodHash the hash of the current pod template")

  public String getCurrentPodHash() {
    return currentPodHash;
  }


  public void setCurrentPodHash(String currentPodHash) {
    this.currentPodHash = currentPodHash;
  }


  public V1alpha1RolloutStatus currentStepHash(String currentStepHash) {
    
    this.currentStepHash = currentStepHash;
    return this;
  }

   /**
   * CurrentStepHash the hash of the current list of steps for the current strategy. This is used to detect when the list of current steps change
   * @return currentStepHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "CurrentStepHash the hash of the current list of steps for the current strategy. This is used to detect when the list of current steps change")

  public String getCurrentStepHash() {
    return currentStepHash;
  }


  public void setCurrentStepHash(String currentStepHash) {
    this.currentStepHash = currentStepHash;
  }


  public V1alpha1RolloutStatus currentStepIndex(Integer currentStepIndex) {
    
    this.currentStepIndex = currentStepIndex;
    return this;
  }

   /**
   * CurrentStepIndex defines the current step of the rollout is on. If the current step index is null, the controller will execute the rollout.
   * @return currentStepIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "CurrentStepIndex defines the current step of the rollout is on. If the current step index is null, the controller will execute the rollout.")

  public Integer getCurrentStepIndex() {
    return currentStepIndex;
  }


  public void setCurrentStepIndex(Integer currentStepIndex) {
    this.currentStepIndex = currentStepIndex;
  }


  public V1alpha1RolloutStatus message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Message provides details on why the rollout is in its current phase
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Message provides details on why the rollout is in its current phase")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  public V1alpha1RolloutStatus observedGeneration(String observedGeneration) {
    
    this.observedGeneration = observedGeneration;
    return this;
  }

   /**
   * The generation observed by the rollout controller from metadata.generation
   * @return observedGeneration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The generation observed by the rollout controller from metadata.generation")

  public String getObservedGeneration() {
    return observedGeneration;
  }


  public void setObservedGeneration(String observedGeneration) {
    this.observedGeneration = observedGeneration;
  }


  public V1alpha1RolloutStatus pauseConditions(List<V1alpha1PauseCondition> pauseConditions) {
    
    this.pauseConditions = pauseConditions;
    return this;
  }

  public V1alpha1RolloutStatus addPauseConditionsItem(V1alpha1PauseCondition pauseConditionsItem) {
    if (this.pauseConditions == null) {
      this.pauseConditions = new ArrayList<>();
    }
    this.pauseConditions.add(pauseConditionsItem);
    return this;
  }

   /**
   * PauseConditions is a list of reasons why rollout became automatically paused (e.g. CanaryPauseStep, BlueGreenPause, InconclusiveAnalysis). The items in this list are populated by the controller but are cleared by the user (e.g. plugin, argo-cd resume action) when they wish to unpause. If pause conditions is empty, but controllerPause is true, it indicates the user manually unpaused the Rollout
   * @return pauseConditions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "PauseConditions is a list of reasons why rollout became automatically paused (e.g. CanaryPauseStep, BlueGreenPause, InconclusiveAnalysis). The items in this list are populated by the controller but are cleared by the user (e.g. plugin, argo-cd resume action) when they wish to unpause. If pause conditions is empty, but controllerPause is true, it indicates the user manually unpaused the Rollout")

  public List<V1alpha1PauseCondition> getPauseConditions() {
    return pauseConditions;
  }


  public void setPauseConditions(List<V1alpha1PauseCondition> pauseConditions) {
    this.pauseConditions = pauseConditions;
  }


  public V1alpha1RolloutStatus phase(String phase) {
    
    this.phase = phase;
    return this;
  }

   /**
   * Phase is the rollout phase. Clients should only rely on the value if status.observedGeneration equals metadata.generation
   * @return phase
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Phase is the rollout phase. Clients should only rely on the value if status.observedGeneration equals metadata.generation")

  public String getPhase() {
    return phase;
  }


  public void setPhase(String phase) {
    this.phase = phase;
  }


  public V1alpha1RolloutStatus promoteFull(Boolean promoteFull) {
    
    this.promoteFull = promoteFull;
    return this;
  }

   /**
   * PromoteFull indicates if the rollout should perform a full promotion, skipping analysis and pauses.
   * @return promoteFull
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "PromoteFull indicates if the rollout should perform a full promotion, skipping analysis and pauses.")

  public Boolean getPromoteFull() {
    return promoteFull;
  }


  public void setPromoteFull(Boolean promoteFull) {
    this.promoteFull = promoteFull;
  }


  public V1alpha1RolloutStatus readyReplicas(Integer readyReplicas) {
    
    this.readyReplicas = readyReplicas;
    return this;
  }

   /**
   * Total number of ready pods targeted by this rollout.
   * @return readyReplicas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total number of ready pods targeted by this rollout.")

  public Integer getReadyReplicas() {
    return readyReplicas;
  }


  public void setReadyReplicas(Integer readyReplicas) {
    this.readyReplicas = readyReplicas;
  }


  public V1alpha1RolloutStatus replicas(Integer replicas) {
    
    this.replicas = replicas;
    return this;
  }

   /**
   * Total number of non-terminated pods targeted by this rollout (their labels match the selector).
   * @return replicas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total number of non-terminated pods targeted by this rollout (their labels match the selector).")

  public Integer getReplicas() {
    return replicas;
  }


  public void setReplicas(Integer replicas) {
    this.replicas = replicas;
  }


  public V1alpha1RolloutStatus restartedAt(OffsetDateTime restartedAt) {
    
    this.restartedAt = restartedAt;
    return this;
  }

   /**
   * Get restartedAt
   * @return restartedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getRestartedAt() {
    return restartedAt;
  }


  public void setRestartedAt(OffsetDateTime restartedAt) {
    this.restartedAt = restartedAt;
  }


  public V1alpha1RolloutStatus selector(String selector) {
    
    this.selector = selector;
    return this;
  }

   /**
   * Selector that identifies the pods that are receiving active traffic
   * @return selector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Selector that identifies the pods that are receiving active traffic")

  public String getSelector() {
    return selector;
  }


  public void setSelector(String selector) {
    this.selector = selector;
  }


  public V1alpha1RolloutStatus stableRS(String stableRS) {
    
    this.stableRS = stableRS;
    return this;
  }

   /**
   * StableRS indicates the replicaset that has successfully rolled out
   * @return stableRS
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "StableRS indicates the replicaset that has successfully rolled out")

  public String getStableRS() {
    return stableRS;
  }


  public void setStableRS(String stableRS) {
    this.stableRS = stableRS;
  }


  public V1alpha1RolloutStatus updatedReplicas(Integer updatedReplicas) {
    
    this.updatedReplicas = updatedReplicas;
    return this;
  }

   /**
   * Total number of non-terminated pods targeted by this rollout that have the desired template spec.
   * @return updatedReplicas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total number of non-terminated pods targeted by this rollout that have the desired template spec.")

  public Integer getUpdatedReplicas() {
    return updatedReplicas;
  }


  public void setUpdatedReplicas(Integer updatedReplicas) {
    this.updatedReplicas = updatedReplicas;
  }


  public V1alpha1RolloutStatus workloadObservedGeneration(String workloadObservedGeneration) {
    
    this.workloadObservedGeneration = workloadObservedGeneration;
    return this;
  }

   /**
   * The generation of referenced workload observed by the rollout controller
   * @return workloadObservedGeneration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The generation of referenced workload observed by the rollout controller")

  public String getWorkloadObservedGeneration() {
    return workloadObservedGeneration;
  }


  public void setWorkloadObservedGeneration(String workloadObservedGeneration) {
    this.workloadObservedGeneration = workloadObservedGeneration;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1RolloutStatus v1alpha1RolloutStatus = (V1alpha1RolloutStatus) o;
    return Objects.equals(this.hpAReplicas, v1alpha1RolloutStatus.hpAReplicas) &&
        Objects.equals(this.abort, v1alpha1RolloutStatus.abort) &&
        Objects.equals(this.abortedAt, v1alpha1RolloutStatus.abortedAt) &&
        Objects.equals(this.alb, v1alpha1RolloutStatus.alb) &&
        Objects.equals(this.availableReplicas, v1alpha1RolloutStatus.availableReplicas) &&
        Objects.equals(this.blueGreen, v1alpha1RolloutStatus.blueGreen) &&
        Objects.equals(this.canary, v1alpha1RolloutStatus.canary) &&
        Objects.equals(this.collisionCount, v1alpha1RolloutStatus.collisionCount) &&
        Objects.equals(this.conditions, v1alpha1RolloutStatus.conditions) &&
        Objects.equals(this.controllerPause, v1alpha1RolloutStatus.controllerPause) &&
        Objects.equals(this.currentPodHash, v1alpha1RolloutStatus.currentPodHash) &&
        Objects.equals(this.currentStepHash, v1alpha1RolloutStatus.currentStepHash) &&
        Objects.equals(this.currentStepIndex, v1alpha1RolloutStatus.currentStepIndex) &&
        Objects.equals(this.message, v1alpha1RolloutStatus.message) &&
        Objects.equals(this.observedGeneration, v1alpha1RolloutStatus.observedGeneration) &&
        Objects.equals(this.pauseConditions, v1alpha1RolloutStatus.pauseConditions) &&
        Objects.equals(this.phase, v1alpha1RolloutStatus.phase) &&
        Objects.equals(this.promoteFull, v1alpha1RolloutStatus.promoteFull) &&
        Objects.equals(this.readyReplicas, v1alpha1RolloutStatus.readyReplicas) &&
        Objects.equals(this.replicas, v1alpha1RolloutStatus.replicas) &&
        Objects.equals(this.restartedAt, v1alpha1RolloutStatus.restartedAt) &&
        Objects.equals(this.selector, v1alpha1RolloutStatus.selector) &&
        Objects.equals(this.stableRS, v1alpha1RolloutStatus.stableRS) &&
        Objects.equals(this.updatedReplicas, v1alpha1RolloutStatus.updatedReplicas) &&
        Objects.equals(this.workloadObservedGeneration, v1alpha1RolloutStatus.workloadObservedGeneration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hpAReplicas, abort, abortedAt, alb, availableReplicas, blueGreen, canary, collisionCount, conditions, controllerPause, currentPodHash, currentStepHash, currentStepIndex, message, observedGeneration, pauseConditions, phase, promoteFull, readyReplicas, replicas, restartedAt, selector, stableRS, updatedReplicas, workloadObservedGeneration);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1RolloutStatus {\n");
    sb.append("    hpAReplicas: ").append(toIndentedString(hpAReplicas)).append("\n");
    sb.append("    abort: ").append(toIndentedString(abort)).append("\n");
    sb.append("    abortedAt: ").append(toIndentedString(abortedAt)).append("\n");
    sb.append("    alb: ").append(toIndentedString(alb)).append("\n");
    sb.append("    availableReplicas: ").append(toIndentedString(availableReplicas)).append("\n");
    sb.append("    blueGreen: ").append(toIndentedString(blueGreen)).append("\n");
    sb.append("    canary: ").append(toIndentedString(canary)).append("\n");
    sb.append("    collisionCount: ").append(toIndentedString(collisionCount)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    controllerPause: ").append(toIndentedString(controllerPause)).append("\n");
    sb.append("    currentPodHash: ").append(toIndentedString(currentPodHash)).append("\n");
    sb.append("    currentStepHash: ").append(toIndentedString(currentStepHash)).append("\n");
    sb.append("    currentStepIndex: ").append(toIndentedString(currentStepIndex)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    observedGeneration: ").append(toIndentedString(observedGeneration)).append("\n");
    sb.append("    pauseConditions: ").append(toIndentedString(pauseConditions)).append("\n");
    sb.append("    phase: ").append(toIndentedString(phase)).append("\n");
    sb.append("    promoteFull: ").append(toIndentedString(promoteFull)).append("\n");
    sb.append("    readyReplicas: ").append(toIndentedString(readyReplicas)).append("\n");
    sb.append("    replicas: ").append(toIndentedString(replicas)).append("\n");
    sb.append("    restartedAt: ").append(toIndentedString(restartedAt)).append("\n");
    sb.append("    selector: ").append(toIndentedString(selector)).append("\n");
    sb.append("    stableRS: ").append(toIndentedString(stableRS)).append("\n");
    sb.append("    updatedReplicas: ").append(toIndentedString(updatedReplicas)).append("\n");
    sb.append("    workloadObservedGeneration: ").append(toIndentedString(workloadObservedGeneration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

