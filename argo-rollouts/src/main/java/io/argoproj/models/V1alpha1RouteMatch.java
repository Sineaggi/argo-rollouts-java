/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.argoproj.models.V1alpha1StringMatch;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * V1alpha1RouteMatch
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-19T21:57:47.017Z[Etc/UTC]")
public class V1alpha1RouteMatch {
  public static final String SERIALIZED_NAME_HEADERS = "headers";
  @SerializedName(SERIALIZED_NAME_HEADERS)
  private Map<String, V1alpha1StringMatch> headers = null;

  public static final String SERIALIZED_NAME_METHOD = "method";
  @SerializedName(SERIALIZED_NAME_METHOD)
  private V1alpha1StringMatch method;

  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private V1alpha1StringMatch path;


  public V1alpha1RouteMatch headers(Map<String, V1alpha1StringMatch> headers) {
    
    this.headers = headers;
    return this;
  }

  public V1alpha1RouteMatch putHeadersItem(String key, V1alpha1StringMatch headersItem) {
    if (this.headers == null) {
      this.headers = new HashMap<>();
    }
    this.headers.put(key, headersItem);
    return this;
  }

   /**
   * Headers What request with matching headers should be mirrored
   * @return headers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Headers What request with matching headers should be mirrored")

  public Map<String, V1alpha1StringMatch> getHeaders() {
    return headers;
  }


  public void setHeaders(Map<String, V1alpha1StringMatch> headers) {
    this.headers = headers;
  }


  public V1alpha1RouteMatch method(V1alpha1StringMatch method) {
    
    this.method = method;
    return this;
  }

   /**
   * Get method
   * @return method
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1StringMatch getMethod() {
    return method;
  }


  public void setMethod(V1alpha1StringMatch method) {
    this.method = method;
  }


  public V1alpha1RouteMatch path(V1alpha1StringMatch path) {
    
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1StringMatch getPath() {
    return path;
  }


  public void setPath(V1alpha1StringMatch path) {
    this.path = path;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1RouteMatch v1alpha1RouteMatch = (V1alpha1RouteMatch) o;
    return Objects.equals(this.headers, v1alpha1RouteMatch.headers) &&
        Objects.equals(this.method, v1alpha1RouteMatch.method) &&
        Objects.equals(this.path, v1alpha1RouteMatch.path);
  }

  @Override
  public int hashCode() {
    return Objects.hash(headers, method, path);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1RouteMatch {\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

