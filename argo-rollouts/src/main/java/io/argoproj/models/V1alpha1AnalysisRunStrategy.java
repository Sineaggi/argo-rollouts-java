/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * AnalysisRunStrategy configuration for the analysis runs and experiments to retain
 */
@ApiModel(description = "AnalysisRunStrategy configuration for the analysis runs and experiments to retain")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-19T21:57:47.017Z[Etc/UTC]")
public class V1alpha1AnalysisRunStrategy {
  public static final String SERIALIZED_NAME_SUCCESSFUL_RUN_HISTORY_LIMIT = "successfulRunHistoryLimit";
  @SerializedName(SERIALIZED_NAME_SUCCESSFUL_RUN_HISTORY_LIMIT)
  private Integer successfulRunHistoryLimit;

  public static final String SERIALIZED_NAME_UNSUCCESSFUL_RUN_HISTORY_LIMIT = "unsuccessfulRunHistoryLimit";
  @SerializedName(SERIALIZED_NAME_UNSUCCESSFUL_RUN_HISTORY_LIMIT)
  private Integer unsuccessfulRunHistoryLimit;


  public V1alpha1AnalysisRunStrategy successfulRunHistoryLimit(Integer successfulRunHistoryLimit) {
    
    this.successfulRunHistoryLimit = successfulRunHistoryLimit;
    return this;
  }

   /**
   * SuccessfulRunHistoryLimit limits the number of old successful analysis runs and experiments to be retained in a history
   * @return successfulRunHistoryLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "SuccessfulRunHistoryLimit limits the number of old successful analysis runs and experiments to be retained in a history")

  public Integer getSuccessfulRunHistoryLimit() {
    return successfulRunHistoryLimit;
  }


  public void setSuccessfulRunHistoryLimit(Integer successfulRunHistoryLimit) {
    this.successfulRunHistoryLimit = successfulRunHistoryLimit;
  }


  public V1alpha1AnalysisRunStrategy unsuccessfulRunHistoryLimit(Integer unsuccessfulRunHistoryLimit) {
    
    this.unsuccessfulRunHistoryLimit = unsuccessfulRunHistoryLimit;
    return this;
  }

   /**
   * UnsuccessfulRunHistoryLimit limits the number of old unsuccessful analysis runs and experiments to be retained in a history. Stages for unsuccessful: \&quot;Error\&quot;, \&quot;Failed\&quot;, \&quot;Inconclusive\&quot;
   * @return unsuccessfulRunHistoryLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UnsuccessfulRunHistoryLimit limits the number of old unsuccessful analysis runs and experiments to be retained in a history. Stages for unsuccessful: \"Error\", \"Failed\", \"Inconclusive\"")

  public Integer getUnsuccessfulRunHistoryLimit() {
    return unsuccessfulRunHistoryLimit;
  }


  public void setUnsuccessfulRunHistoryLimit(Integer unsuccessfulRunHistoryLimit) {
    this.unsuccessfulRunHistoryLimit = unsuccessfulRunHistoryLimit;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1AnalysisRunStrategy v1alpha1AnalysisRunStrategy = (V1alpha1AnalysisRunStrategy) o;
    return Objects.equals(this.successfulRunHistoryLimit, v1alpha1AnalysisRunStrategy.successfulRunHistoryLimit) &&
        Objects.equals(this.unsuccessfulRunHistoryLimit, v1alpha1AnalysisRunStrategy.unsuccessfulRunHistoryLimit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(successfulRunHistoryLimit, unsuccessfulRunHistoryLimit);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1AnalysisRunStrategy {\n");
    sb.append("    successfulRunHistoryLimit: ").append(toIndentedString(successfulRunHistoryLimit)).append("\n");
    sb.append("    unsuccessfulRunHistoryLimit: ").append(toIndentedString(unsuccessfulRunHistoryLimit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

