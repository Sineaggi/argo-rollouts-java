/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.argoproj.models.V1alpha1AnalysisRunArgument;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * V1alpha1RolloutExperimentStepAnalysisTemplateRef
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-19T21:57:47.017Z[Etc/UTC]")
public class V1alpha1RolloutExperimentStepAnalysisTemplateRef {
  public static final String SERIALIZED_NAME_ARGS = "args";
  @SerializedName(SERIALIZED_NAME_ARGS)
  private List<V1alpha1AnalysisRunArgument> args = null;

  public static final String SERIALIZED_NAME_CLUSTER_SCOPE = "clusterScope";
  @SerializedName(SERIALIZED_NAME_CLUSTER_SCOPE)
  private Boolean clusterScope;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name = "";

  public static final String SERIALIZED_NAME_REQUIRED_FOR_COMPLETION = "requiredForCompletion";
  @SerializedName(SERIALIZED_NAME_REQUIRED_FOR_COMPLETION)
  private Boolean requiredForCompletion;

  public static final String SERIALIZED_NAME_TEMPLATE_NAME = "templateName";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_NAME)
  private String templateName = "";


  public V1alpha1RolloutExperimentStepAnalysisTemplateRef args(List<V1alpha1AnalysisRunArgument> args) {
    
    this.args = args;
    return this;
  }

  public V1alpha1RolloutExperimentStepAnalysisTemplateRef addArgsItem(V1alpha1AnalysisRunArgument argsItem) {
    if (this.args == null) {
      this.args = new ArrayList<>();
    }
    this.args.add(argsItem);
    return this;
  }

   /**
   * Args the arguments that will be added to the AnalysisRuns
   * @return args
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Args the arguments that will be added to the AnalysisRuns")

  public List<V1alpha1AnalysisRunArgument> getArgs() {
    return args;
  }


  public void setArgs(List<V1alpha1AnalysisRunArgument> args) {
    this.args = args;
  }


  public V1alpha1RolloutExperimentStepAnalysisTemplateRef clusterScope(Boolean clusterScope) {
    
    this.clusterScope = clusterScope;
    return this;
  }

   /**
   * Whether to look for the templateName at cluster scope or namespace scope
   * @return clusterScope
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether to look for the templateName at cluster scope or namespace scope")

  public Boolean getClusterScope() {
    return clusterScope;
  }


  public void setClusterScope(Boolean clusterScope) {
    this.clusterScope = clusterScope;
  }


  public V1alpha1RolloutExperimentStepAnalysisTemplateRef name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name is a name for this analysis template invocation
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Name is a name for this analysis template invocation")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public V1alpha1RolloutExperimentStepAnalysisTemplateRef requiredForCompletion(Boolean requiredForCompletion) {
    
    this.requiredForCompletion = requiredForCompletion;
    return this;
  }

   /**
   * RequiredForCompletion blocks the Experiment from completing until the analysis has completed
   * @return requiredForCompletion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "RequiredForCompletion blocks the Experiment from completing until the analysis has completed")

  public Boolean getRequiredForCompletion() {
    return requiredForCompletion;
  }


  public void setRequiredForCompletion(Boolean requiredForCompletion) {
    this.requiredForCompletion = requiredForCompletion;
  }


  public V1alpha1RolloutExperimentStepAnalysisTemplateRef templateName(String templateName) {
    
    this.templateName = templateName;
    return this;
  }

   /**
   * TemplateName reference of the AnalysisTemplate name used by the Experiment to create the run
   * @return templateName
  **/
  @ApiModelProperty(required = true, value = "TemplateName reference of the AnalysisTemplate name used by the Experiment to create the run")

  public String getTemplateName() {
    return templateName;
  }


  public void setTemplateName(String templateName) {
    this.templateName = templateName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1RolloutExperimentStepAnalysisTemplateRef v1alpha1RolloutExperimentStepAnalysisTemplateRef = (V1alpha1RolloutExperimentStepAnalysisTemplateRef) o;
    return Objects.equals(this.args, v1alpha1RolloutExperimentStepAnalysisTemplateRef.args) &&
        Objects.equals(this.clusterScope, v1alpha1RolloutExperimentStepAnalysisTemplateRef.clusterScope) &&
        Objects.equals(this.name, v1alpha1RolloutExperimentStepAnalysisTemplateRef.name) &&
        Objects.equals(this.requiredForCompletion, v1alpha1RolloutExperimentStepAnalysisTemplateRef.requiredForCompletion) &&
        Objects.equals(this.templateName, v1alpha1RolloutExperimentStepAnalysisTemplateRef.templateName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(args, clusterScope, name, requiredForCompletion, templateName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1RolloutExperimentStepAnalysisTemplateRef {\n");
    sb.append("    args: ").append(toIndentedString(args)).append("\n");
    sb.append("    clusterScope: ").append(toIndentedString(clusterScope)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    requiredForCompletion: ").append(toIndentedString(requiredForCompletion)).append("\n");
    sb.append("    templateName: ").append(toIndentedString(templateName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

